<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/pretty-feed-v3.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coveragepy on Hugo van Kemenade</title><link>https://hugovk.dev/tags/coveragepy/</link><description>Recent content in coveragepy on Hugo van Kemenade</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-sa/4.0/">{{&lt; icon "cc" >}}{{&lt; icon "cc-by" >}}{{&lt; icon "cc-sa" >}}&lt;/a>&amp;nbsp;Hugo van Kemenade&lt;br>&lt;p class="text-xs text-neutral-500 dark:text-neutral-400">Powered by &lt;a class="hover:underline hover:decoration-primary-400 hover:text-primary-500" href="https://gohugo.io/" target="_blank" rel="noopener noreferrer">Hugo&lt;/a> &amp;amp; &lt;a class="hover:underline hover:decoration-primary-400 hover:text-primary-500" href="https://github.com/jpanther/congo" target="_blank" rel="noopener noreferrer">Congo&lt;/a> &amp;amp; &lt;a class="hover:underline hover:decoration-primary-400 hover:text-primary-500" href="https://hugovk.dev" target="_blank" rel="noopener noreferrer">Hugo&lt;/a>&lt;/p></copyright><lastBuildDate>Mon, 06 Nov 2023 20:05:55 +0000</lastBuildDate><atom:link href="https://hugovk.dev/tags/coveragepy/index.xml" rel="self" type="application/rss+xml"/><item><title>TIL: exclude_also with coverage.py</title><link>https://hugovk.dev/blog/2023/til-excludealso-with-coveragepy/</link><pubDate>Mon, 06 Nov 2023 20:05:55 +0000</pubDate><guid>https://hugovk.dev/blog/2023/til-excludealso-with-coveragepy/</guid><description>&lt;p>Sometimes you have code you want to exclude from the test coverage report, because it
doesn&amp;rsquo;t really make sense to test it.&lt;/p>
&lt;p>For example, maybe you want to exclude:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;em>old&lt;/em> advice was to add something like this to &lt;code>.coveragerc&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[report]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Regexes for lines to exclude from consideration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">exclude_lines&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> # Have to re-enable the standard pragma:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> pragma: no cover&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Don&amp;#39;t complain if non-runnable code isn&amp;#39;t run:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">if __name__&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="s">= .__main__.:&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But since
&lt;a href="https://coverage.readthedocs.io/en/7.3.2/changes.html#version-7-2-0-2023-02-22" target="_blank" rel="noreferrer">coverage.py 7.2.0 (2023-02-22)&lt;/a>
you can use &lt;code>exclude_also&lt;/code> instead and skip that pragma:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[report]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Regexes for lines to exclude from consideration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">exclude_also&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> # Don&amp;#39;t complain if non-runnable code isn&amp;#39;t run:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> if __name__ == .__main__.:&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="line">&lt;span class="cl"> [report]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> # Regexes for lines to exclude from consideration
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">-exclude_lines =
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">- # Have to re-enable the standard pragma:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">- pragma: no cover
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">-
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+exclude_also =
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span> # Don&amp;#39;t complain if non-runnable code isn&amp;#39;t run:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if __name__ == .__main__.:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="thanks" class="relative group">Thanks &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#thanks" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h2>&lt;p>To &lt;a href="https://mastodon.social/@brianokken@fosstodon.org/111360201593749157" target="_blank" rel="noreferrer">Brian Okken&lt;/a>
for the tip.&lt;/p>
&lt;p>To &lt;a href="https://nedbatchelder.com/" target="_blank" rel="noreferrer">Ned Batchelder&lt;/a> for maintaining
&lt;a href="https://coverage.readthedocs.io" target="_blank" rel="noreferrer">Coverage.py&lt;/a>.&lt;/p>
&lt;p>To the Library of Congress and Flickr Commons for the photo of a
&lt;a href="https://www.flickr.com/photos/library_of_congress/52303625278/" target="_blank" rel="noreferrer">covered wagon&lt;/a>.&lt;/p></description></item></channel></rss>